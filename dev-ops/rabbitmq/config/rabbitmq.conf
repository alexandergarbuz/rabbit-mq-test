## Node name
# The node name should be unique per RabbitMQ cluster. Use long node names for consistent naming.
node.name = rabbit@localhost

## Listener settings
# Configuring TCP listeners for RabbitMQ.
listeners.tcp.default = 5672

# SSL/TLS settings
# listeners.ssl.default = 5671
# ssl_options.cacertfile = /path/to/cacert.pem
# ssl_options.certfile = /path/to/cert.pem
# ssl_options.keyfile = /path/to/key.pem
# ssl_options.verify = verify_peer
# ssl_options.fail_if_no_peer_cert = true

## Management Plugin settings
management.listener.port = 15672

## Default user credentials
default_user = guest
default_pass = guest

## Virtual hosts
# Define virtual hosts that should exist after the server starts.
# This can be useful for creating virtual hosts before the server starts accepting connections.
# This example creates two virtual hosts.
# default_vhost = /
# alternate_vhost = /alternate

## Disk free limit
# Set a disk free limit to prevent RabbitMQ from filling up the disk.
disk_free_limit.absolute = 1GB

## Memory high watermark
# Set a memory high watermark to prevent RabbitMQ from using too much memory.
vm_memory_high_watermark.absolute = 512MB

## Cluster formation settings
# Cluster RabbitMQ nodes automatically using DNS.
# clustering.peer_discovery_backend = rabbit_peer_discovery_dns
# clustering.peer_discovery.dns.hostname = rabbitmq.service.consul
# clustering.peer_discovery.dns.use_longnames = true

## Log levels
# Set log levels for RabbitMQ.
log.console.level = info

## Plugins
# Enable or disable plugins.
# plugin_dir = /path/to/plugins
# plugins.expand_dir = /path/to/plugins/expanded
# plugins.enabled = rabbitmq_management
